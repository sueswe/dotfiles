#!/usr/bin/env perl

### CONFIG #####################################################################
my $FROM_DEFAULT = $ENV{'LOGNAME'};
my $VSTR = $ENV{'VSTR'};
my $SMTPD;
my $AUTHOR = "werner.suess\@itsv.at";
my $VERSION = "0.7.2 from 2018-03-29";
my $MAILER_DRY = $ENV{MAILER_DRY};
################################################################################

use warnings;
use strict;
use Sys::Hostname;
use Net::Domain qw(hostname hostfqdn hostdomain domainname);
use Mail::Sender;
use File::Glob ':glob';
use Getopt::Long; # qw (GetOptions);
use Log::Log4perl qw(:easy);
Log::Log4perl->easy_init(
{
    # levels from low to high:
    # level => $DEBUG,
     level => $INFO,
    # level => $WARN,
    # level => $ERROR,
    # level => $FATAL,
    mode => "append",
    layout => "%d{yyyy-MM-dd HH:mm:ss} %p> %m%n",
    file => 'stdout',
    }
);

#
# SMTPD ist einheitlich fuer alle hosts:
#
$SMTPD = "viruswall.sozvers.at";



INFO "mailer.pl Version $VERSION";
#DEBUG("mailer.pl Version $VERSION , (c) $AUTHOR ");
my $hostname = hostname();
my $domain = hostdomain();

GetOptions (
    "to=s"              => \my $RECIPIENTS,
    "from=s"            => \my $FROM,
    "subject=s"         => \my $SUBJECT,
    "attachment=s"      => \my $FILE_TO_MAIL,
    "wildattachm=s"     => \my $WILDATTACHM,
    "message=s"         => \my $MESSAGE_S,
    "debug"             => \my $DEBUG,
    "host=s"            => \my $smtpd, #transport-agent SMTPD
);

if ( ! defined $RECIPIENTS or ! defined $SUBJECT or ! defined $MESSAGE_S ) {
    DEBUG("Option missing.");
    usage();
    exit(1);
}

if ( defined $smtpd ) {
    $SMTPD = $smtpd ;
    DEBUG("SMTPD set to $smtpd (overides the default value)");
}

if ( ! defined $FROM ) {
    $FROM = $FROM_DEFAULT;
    if ($FROM =~ m/\@/ig ) {
        DEBUG("Found a \@ ... good");
        DEBUG("From set default to: $FROM");
    } else {
        DEBUG("Didn't found a \@ ... ");
        $FROM = $FROM . "\@" . $hostname . "." . $domain;
        DEBUG("From set default to: $FROM");
    }
} else {
    INFO("From set to: $FROM");
}

INFO("Subject: $SUBJECT");

# Just do nothing:
if ( defined $MAILER_DRY ) {
    WARN "MAILER_DRY is exported, no email will be sent.\n";
    #print "==========================================================================\n";
    exit(0);
}

if ( defined $FILE_TO_MAIL ) {
    DEBUG("send_file part");
    my @f = split(',',$FILE_TO_MAIL);
    foreach my $n (@f) {
        if ( -e $n) { INFO("File $n found."); } else { ERROR("File $n not found!"); exit(5); }
    }
    send_file("$RECIPIENTS","$MESSAGE_S");
}
elsif ( defined $WILDATTACHM ) {
    DEBUG("Send more attachments with wildcard-search ...");
    DEBUG("Uebergebener string: $WILDATTACHM");
    my @w = bsd_glob("$WILDATTACHM");
    DEBUG("array: @w");
    my $anzahl = @w;
    my $filelist;
    if ($anzahl == 1 ) {
        $filelist = join("",@w);
    } else {
        $filelist = join(",",@w);
    }

    INFO("Fileliste: $filelist");
    send_file_wildcard("$RECIPIENTS","$MESSAGE_S","$filelist");
}
else {
    DEBUG("sending email without any attachments.");
    send_mail("$RECIPIENTS","$MESSAGE_S");
}


INFO("Email hopefully sent to $RECIPIENTS via $SMTPD.");
#print "==========================================================================\n";



################################################################################
sub send_mail
################################################################################
{
my ($TO,@MESSAGE) = @_;

my $sender;

if (! defined $DEBUG) {
    $sender = new Mail::Sender {
    smtp => $SMTPD,
    from => $FROM,
    #    headers => '
    #Content-Type: text/plain; charset="iso-8859-1"
    #Content-Transfer-Encoding: quoted-printable
    #',
    tls_allowed => 0,
    on_errors => undef,
    } or die("Can't create the Mail::Sender object: " . $Mail::Sender::Error );
} else {
    $sender = new Mail::Sender {
    smtp => $SMTPD,
    from => $FROM,
    tls_allowed => 0,
    debug => 'mailer_debug.log',
    on_errors => undef,
    } or die("Can't create the Mail::Sender object: " . $Mail::Sender::Error );
}

my @sMESSAGE;
foreach my $string (@MESSAGE) {
    $string =~ s/\r\n/\n/g; $string =~ s/\r/\n/g; $string =~ s/\n/\r\n/g;
    DEBUG "message: $string \n";
    push(@sMESSAGE,$string);
}

$sender->Open({
    to => $TO,
    subject => $SUBJECT,
    encoding => 'quoted-printable',
    charset => 'iso-8859-1',
    }) or die "Can't open the message: $sender->{'error_msg'}\n";
$sender->SendLineEnc("@sMESSAGE" . " \n\n\n(This is an autogenerated message)\n-------------------------------------\nPlease reply to: rz.om.stp\@itsv.at");
$sender->Close();
}

################################################################################
sub send_file
################################################################################
{
my ($TO,@MESSAGE) = @_;

my @sMESSAGE;
foreach my $string (@MESSAGE) {
    $string =~ s/\r\n/\n/g; $string =~ s/\r/\n/g; $string =~ s/\n/\r\n/g;
    DEBUG "message: $string \n";
    push(@sMESSAGE,$string);
}

my $sender;
if (! defined $DEBUG) {
    $sender = new Mail::Sender {
    smtp => $SMTPD,
    from => $FROM,
    tls_allowed => 0,
    on_errors => undef,
    } or die("Can't create the Mail::Sender object: " . $Mail::Sender::Error );
} else {
    $sender = new Mail::Sender {
    smtp => $SMTPD,
    from => $FROM,
    tls_allowed => 0,
    debug => 'mailer_debug.log',
    on_errors => undef,
    } or die("Can't create the Mail::Sender object: " . $Mail::Sender::Error );
}

if (
    $sender->MailFile(
    {
        to => $TO,
        subject => $SUBJECT,
        msg => "@sMESSAGE \n\n\n(This is an autogenerated message)\n-------------------------------------\nPlease reply to: rz.om.stp\@itsv.at",
        # auth => 'LOGIN',
        # authid => '',
        # authpwd => '',
        file => $FILE_TO_MAIL,
    }) < 0) {
        ERROR("Error: $Mail::Sender::Error");
        sleep(2);
        exit(7);
    } # end IF
$sender->Close();
}

################################################################################
sub send_file_wildcard
################################################################################
{
my ($TO,$MESSAGE,$WILDFILES) = @_;

my $sender;
if (! defined $DEBUG) {
    $sender = new Mail::Sender {
    smtp => $SMTPD,
    from => $FROM,
    tls_allowed => 0,
    on_errors => undef,
    } or die("Can't create the Mail::Sender object: " . $Mail::Sender::Error );
} else {
    $sender = new Mail::Sender {
    smtp => $SMTPD,
    from => $FROM,
    tls_allowed => 0,
    debug => 'mailer_debug.log',
    on_errors => undef,
    } or die("Can't create the Mail::Sender object: " . $Mail::Sender::Error );
}

if (
    $sender->MailFile(
    {
        to => $TO,
        subject => $SUBJECT,
        msg => "$MESSAGE \n\n\n(This is an autogenerated message)\n-------------------------------------\nPlease reply to: rz.om.stp\@itsv.at",
        # auth => 'LOGIN',
        # authid => 'riener\_\@gmx.net',
        # authpwd => 'xxxx',
        file => $WILDFILES,
    }) < 0) {
        ERROR("Error: $Mail::Sender::Error");
        sleep(2);
        exit(7);
    } # end IF
$sender->Close();
}

################################################################################
sub usage
################################################################################
{
print <<EOL
USAGE:
mailer.pl   --to|-t foo\@bar.com,bar\@foo.net
            --subject|-s "subject-header"
            --message|-m "textbody"
            [--from|-f bar\@foo.org]
            [--attachment|-a FILE1,FILE2]
            [--wildattachm|-w "*|?<string>*|?"]
            [--debug|-d]
            [--host mail.smtpd.tld]
EOL
;

print <<EOF
Examples:

Sending a simple email:
  mailer.pl -t gustav.gans\@entenhausen.de,nookie.suess\@gmail.com -s "You win again" -m "Congratulations Mr. Gans\!"

Sending an email with an attachment:
  mailer.pl -t donald.duck\@entenhausen.de -s "You have lost" -m "We are very sorry, Mr. Duck." -a letter.pdf,winer.doc

Writing a file with debug-messages for SMTP-communication:
  mailer.pl -t rz.om.stp\@itsv.at -s "Statusemail" -m "Everything is lost." -d

Sending email with more attachments, using wildcards: (! needs Gaensefuesse !):
  mailer.pl -t rz.om.stp\@itsv.at -s "More files" -m "siehe Anhang" -w "*protokoll"


If MAILER_DRY is exported, no Email will be sent.

==========================================================================
EOF

}

=POD
=CUT
