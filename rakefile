
require 'logger'
require 'colorize'
logger = Logger.new(STDOUT)
#logger.level = Logger.WARN

logger.formatter = proc do |severity, datetime, progname, msg|
    date_format = datetime.strftime("%Y-%m-%d %H:%M:%S").cyan + " "
    "#{severity.ljust(5)} [#{date_format}]: #{msg}\n"
end

task :default => [ :apt, :bashrc , :bin_install , :pic_install , :tint2 , :openbox , :rofi, :post ]

os = RbConfig::CONFIG["host_os"]
homeDir = ENV["HOME"]
binDir = ENV["HOME"] + "/bin/"

puts "You are runnig on " + os.yellow
puts "HOME is " + homeDir.yellow

################################################################################

desc "rofi configuration"
task :rofi do
  puts "Nothing to do here."
end


desc "tint2 config-files installation"
task :tint2 do
  puts ""
  File.exists?(homeDir + "/.config/tint2/")
  logger.info "installing tint-config files"
  tfile = FileList.new("tint2/*tint2rc*")
  tfile.each do |f|
    cp( f , homeDir + "/.config/tint2/")
  end
end


desc "openbox configuration-files installation"
task :openbox do
  puts ""
  File.exists?(homeDir + "/.config/openbox/")
  logger.info "installting openbox configuration"
  obfiles = FileList.new("openbox/*")
  obfiles.each do |f|
    cp( f , homeDir + "/.config/openbox/")
  end
  logger.info "done."
end


desc "git config-file installation"
task :gitconfig do
  logger.info "Creating a basic .gitconfig ..."
  
  if File.exists?(homeDir + /.gitconfig)
    logger.warn "File already exists"
  else
    print "Enter git username: "
    gituser = STDIN.gets.chomp
    print "Enter your email adress: "
    gitemail = STDIN.gets.chomp
    f = File.open("#{homeDir}"/.gitconfig, 'w')
    f.puts "[user]"
    f.puts "  name = #{gituser}"
    f.puts "  email = #{gitemail}"
    f.close
  end
end


desc ".bashrc - file installation"
task :bashrc do
  puts ""
  logger.info("installing .bashrc into #{home} ...")
  cp( home + '/.bashrc' , homeDir + '/.bashrc.bak' ) if File.exists?(homeDir + '/.bashrc')
  File.delete( homeDir + '/.bashrc' ) if File.exists?(homeDIr + '/.bashrc')
  
  pwd = File.absolute_path('profile/bashrc')
  
  File.symlink( pwd , homeDir + '/.bashrc' )
  logger.info "done."
end


desc "copy Pictures/* - files"
task :pic_install do
  puts ""
  File.exists?(homeDir + "/Pictures")
  logger.info("installing some stuff into #{homeDir}/Pictures/ ...")
  binFiles = FileList.new("Pictures/*")
  binFiles.each do |f|
    #logger.info("installing #{f}")
    #puts "installing #{f}".cyan
    cp(f , homeDir + '/Pictures/')
  end
  logger.info "done."
end


desc "bin/* - files installation "
task :bin_install do
  puts ""
  File.exists?(homeDir + "/bin")
  logger.info("installing some stuff into #{home}/bin/ ...")
  binFiles = FileList.new("bin/*")
  binFiles.each do |f|
    #logger.info("installing #{f}")
    #puts "installing #{f}".cyan
    cp(f , homeDir + '/bin/')
  end
  logger.info "done."
end


desc "Install some apt-packages"
task :apt do
  puts ""
  logger.info("installing some pakages ...")
  apt_list="ruby-dev git lxterminal rofi rdesktop vpnc scrot thunar i3lock pavucontrol feh guake openbox openbox-menu obconf openbox-menu tint2 xfce4-power-manager orage"
  sh("sudo apt-get install #{apt_list}")
  logger.info "done."
end


desc " bash_it clone and installation"
task :bashit do
  puts ""
  logger.info("getting bash_it ...")
  sh("git clone https://github.com/Bash-it/bash-it.git $HOME/.bash_it") if not Dir.exist?(home + "/.bash_it")
  sh("cd $HOME/.bash_it && git checkout master && git pull origin master")
  logger.info "done."
end


desc "post-run"
task :post do
  puts ""
  logger.info "finished."
end
