#!/bin/sh

echo 'bootstrap v0.5'

DOTFILES_ROOT="`pwd`"

##############################################################################

info () {
    echo -e "\e[0;35mINFO\033[0m $1\c"
}

success () {
    echo -e "\e[0;32mOK\033[0m $1 "
}

fail () {
    echo -e "\e[0;31mFAIL\033[0m $1"
}

warn () {
    echo -e "\e[0;33mWARN\033[0m $1"
}

##############################################################################

#
# installing new .profile 
#
mv -f ~/.profile ~/.profile.bak 2>/dev/null || { 
    info "no old ~/.profile found. Good. \n" 
    }
$(export | grep OS | grep -i windows)
rtc=$?
if [ $rtc -eq 0 ]; then
    info "it seems we are under Windows Msysgit \n"
    info "installing new .profile ... \n"
    cp -f profile/profile.msysgit ~/.profile
    rtc=$?
else
    info "it seems we are under Linux \n"
    info "installing new .profile ... \n"
    cp -f profile/profile.unix ~/.profile
    rtc=$?
fi
if [ "$rtc" -ne 0 ]; then { fail "copy failed."; exit $rtc ; } else { info "done.\n" ; } fi
chmod 0750 ~/.profile


#
# linking .profile to .bash_profile
#
info "linking .profile to .bash_profile \n"
if [ -e ~/.bash_profile ] ; then
    warn "Saving old .bash_profile \n"
    mv -f ~/.bash_profile ~/.bash_profile.backup
    ln -sf ~/.profile ~/.bash_profile
else
    ln -sf ~/.profile ~/.bash_profile
fi


#
# adding . .profile to .bashrc
#
if [ -e ~/.bashrc ]; then
    info ".bashrc found, adding source .profile ...\n"
    echo '. ~/.profile' >> ~/.bashrc
fi


#
# installing ~/bin
#
mkdir ~/bin 2>/dev/null || { 
    info "~/bin already exists.\n"
    }
for n in $(ls $DOTFILES_ROOT/bin/); do
    n="bin/$n"
    info "installing $n ... "
    cp -f $n ~/bin/ ; rtc=$?
    if [ "$rtc" -ne 0 ]; then { fail "copy failed."; exit $rtc ; } else { success "" ; } fi
done


#
# installing .vimrc
#
info "installing .vimrc \n"
if [ -e ~/.vimrc ]; then
    warn "saving old .vimrc"
    mv -f ~/.vimrc ~/.vimrc.bak
fi
cp -f vim/vimrc ~/.vimrc
success "done"


#
# installing .gitconfig
#
info "installing .gitconfig \n"
if [ -e ~/.gitconfig ]; then
    warn "saving old .gitconfig"
    mv -f ~/.gitconfig ~/.gitconfig.bak
fi

# are we at home or in the office?
ifconfig 2>/dev/null
if [ $? -ne 0 ]; then 
    fail "cannot get ip, but thats OK now."
    myNET="172"
else
    myIP=$(ifconfig | grep addr: | grep 192 | awk '{print$2}' | awk -F: '{print $2}')
fi

myNET=$(echo $myIP | awk -F. '{print $1 }')
#echo "MyNET: $myNET"

if [[ "$myNET" -eq "192" ]]; then
    # we're at home, baby
    cp -f git/gitconfig ~/.gitconfig
    if [ $? -ne 0 ]; then fail "Cannot copy gitconfig"; exit 2 ; fi
else
    cp -f git/gitconfig.itsv ~/.gitconfig
    if [ $? -ne 0 ]; then fail "Cannot copy gitconfig.itsv"; exit 2 ; fi
fi

success "done"





#
# end
#
echo ''
success "that's it."





